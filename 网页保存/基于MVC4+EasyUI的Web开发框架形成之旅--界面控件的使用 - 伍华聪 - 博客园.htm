<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<title>基于MVC4+EasyUI的Web开发框架形成之旅--界面控件的使用 - 伍华聪 - 博客园</title>
<link type="text/css" rel="stylesheet" href="/bundles/blog-common.css?v=TdLMZRHMQfitXmNZ7SFinI4hbzrT2-_1PvIqhhWnsbI1"/>
<link id="MainCss" type="text/css" rel="stylesheet" href="/skins/AnotherEon001/bundle-AnotherEon001.css?v=_m-jLtl6JZTPbqa4gXDwru2bF6vsLtluIVqvc1OQ0ko1"/>
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/wuhuacong/rss"/>
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/wuhuacong/rsd.xml"/>
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/wuhuacong/wlwmanifest.xml"/>
<script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"></script>  
<script type="text/javascript">var currentBlogApp = 'wuhuacong', cb_enable_mathjax=false;</script>
<script src="/bundles/blog-common.js?v=PlJ9KQtkGa_ccgZxU9Fon-EDNUyrm0y3GKrHRkjy4p81" type="text/javascript"></script>
</head>
<body>
<a name="top"></a>

<div id="wrapper">
<div id="header">

<div id="top">
<h1><a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/wuhuacong/">wuhuacong(伍华聪)的专栏</a></h1>
<div id="subtitle"></div>
</div>
<div id="sub">
<div class="BlogStats">随笔 - 432, 文章 - 20, 评论 - 6562, 引用 - 20</div>
</div>



</div>
<div id="main_container">
<div id="main_content">
<div id="content">
	
<div id="post_detail">
	<div class="post">
		<h2>
			<a id="cb_post_title_url" href="http://www.cnblogs.com/wuhuacong/p/3317223.html">基于MVC4+EasyUI的Web开发框架形成之旅--界面控件的使用</a>
		</h2>
		<div class="postbody">
		<div id="cnblogs_post_body"><p>在前面介绍了两篇关于我的基于MVC4+EasyUI技术的Web开发框架的随笔，本篇继续介绍其中界面部分的一些使用知识，包括控件的赋值、取值、清空，以及相关的使用。</p>
<p>我们知道，一般Web界面包括的界面控件有：单行文本框、多行文本框、密码文本框、下拉列表Combobox、日期输入控件、数值输入控件、单项选择、复选框、表格控件DataGrid、树形控件、布局控件、弹出式对话框、提示信息、列表控件等，这些界面控件的操作都有哪些不同，下面我们来逐一进行介绍。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22154622-0076dcd508ba4355840ff1905c1442f5.png" alt="" /></p>
<h3>1、单行文本框</h3>
<p>使用easyui的控件，单行文本可以使用easyui-validatebox样式即可，类型为text的控件。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22154825-2bf2d6b2ed5e4e1ebd29dbe05c991918.png" alt="" /></p>
<p>界面代码如下所示：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="easyui-validatebox"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="text"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="Name"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="Name"</span> <span style="color: #0000ff;">/&gt;</span><span style="color: #000000;">
或者
</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="text"</span><span style="color: #ff0000;"> ID</span><span style="color: #0000ff;">="txtLoginName"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="txtLoginName"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="width:100px"</span>  <span style="color: #0000ff;">/&gt;</span></pre>
</div>
<p>赋值给界面控件代码如下：</p>
<div class="cnblogs_code">
<pre>$("#Name").val(info.Name);</pre>
</div>
<p>获取界面控件的值代码如下：</p>
<div class="cnblogs_code">
<pre>var name = $("#Name").val();</pre>
</div>
<p>如果是标签Lable控件，这需要把val 使用text替代即可，如下代码所示：</p>
<div class="cnblogs_code">
<pre>$("#Name").text(info.Name);</pre>
</div>
<p>&nbsp;对于easyui-validatebox样式的控件，一般来说，有几个常见属性可以设置他们的。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">//必输项：
 </span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="easyui-validatebox"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="text"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="name"</span><span style="color: #ff0000;"> data-options</span><span style="color: #0000ff;">="required:true"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">input</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">

//格式的验证：
 </span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="easyui-validatebox"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="text"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="email"</span><span style="color: #ff0000;"> data-options</span><span style="color: #0000ff;">="validType:'email'"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">input</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="easyui-validatebox"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="text"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="email"</span><span style="color: #ff0000;"> data-options</span><span style="color: #0000ff;">="required:true,validType:'url'"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">input</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">

//长度范围的验证：
 </span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="easyui-validatebox"</span><span style="color: #ff0000;"> data-options</span><span style="color: #0000ff;">="validType:'length[1,3]'"</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<h3>2、多行文本框</h3>
<p>easyui的界面样式，可以使用easyui-validatebox，或者默认的textarea即可。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22154931-3f09390a17fa4558b76586efb1f1ed21.png" alt="" /></p>
<p>界面代码如下所示：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">textarea </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="type_Remark"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="easyui-validatebox"</span><span style="color: #ff0000;"> required</span><span style="color: #0000ff;">="true"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="height:100px;"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">textarea</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>或者</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">textarea </span><span style="color: #ff0000;">style</span><span style="color: #0000ff;">="height:60px;width:200px"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="type_Remark"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="Remark"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">textarea</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>赋值给界面控件代码如下：</p>
<div class="cnblogs_code">
<pre>$("#type_Remark").val(json.Remark);</pre>
</div>
<p>获取界面控件的值代码如下：</p>
<div class="cnblogs_code">
<pre> var text = $("#type_Remark").val();    </pre>
</div>
<p>&nbsp;</p>
<h3>3、密码文本框</h3>
<p>密码文本框和常规的文本框一样，只是输入字符的时候，系统做了屏蔽显示而已，把它作为一个来独立说明，也是因为它也是常见输入的一种。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22155215-4aecd8e74673446abf03941484516320.png" alt="" /></p>
<p>界面代码如下所示：</p>
<div class="cnblogs_code">
<pre> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="password"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="password"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="width:260px;"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">input</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>赋值给界面控件代码如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> password = '123'<span style="color: #000000;">;
$(</span>"#Password").val(password)</pre>
</div>
<p>获取界面控件的值代码如下：</p>
<div class="cnblogs_code">
<pre>            $("#btnLogin").click(<span style="color: #0000ff;">function</span><span style="color: #000000;"> () {</span>
                <span style="color: #0000ff;">var</span> postData =<span style="color: #000000;"> {
                    UserName: $(</span>"#UserName"<span style="color: #000000;">).val(),
                    Password: $(</span>"#Password"<span style="color: #000000;">).val(),
                    Code: $(</span>"#Code"<span style="color: #000000;">).val()
                };</span></pre>
</div>
<p>&nbsp;</p>
<h3>4、下拉列表Combobox</h3>
<p>常见的EasyUI的ComboBox是可以输入，也可以从列表选择的内容的输入控件。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22155816-e75b872b4b1e435da5f3fc59dc14772c.png" alt="" /></p>
<p>界面代码如下所示：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="easyui-combobox"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="text"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="type_PID1"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="PID"</span> <span style="color: #0000ff;">/&gt;</span></pre>
</div>
<p>绑定下拉列表的数据源代码如下：</p>
<div class="cnblogs_code">
<pre>            $('#type_PID1'<span style="color: #000000;">).combobox({
                url: </span>'/DictType/GetDictJson'<span style="color: #000000;">,
                valueField: </span>'Value'<span style="color: #000000;">,
                textField: </span>'Text'<span style="color: #000000;">
            });</span></pre>
</div>
<p>设置控件的选择的内容代码如下：</p>
<div class="cnblogs_code">
<pre>$("#type_PID1").combobox('setValue', json.PID);</pre>
</div>
<p>获取界面控件的值代码如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> systemType=  $("#txtSystemType_ID").combobox('getValue');</pre>
</div>
<p>&nbsp;而利用标准的Select控件虽然可以实现从列表选择，不过不够ComboBox控件那么灵活方便，Select控件的界面代码如下：</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22160046-d867a9aa1a2c45be82adc38d5df8bb84.png" alt="" /></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">select </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="txtPID"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="width: 100%"</span> <span style="color: #0000ff;">&gt;</span> <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">select</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<h3>5、日期输入控件</h3>
<p>easyui使用class=&lsquo;easyui-datebox&rsquo;来标识日期控件，从弹出的层中选择正确的日期，是一种非常常见的界面输入控件，可以替代My97DatePicker日期输入控件。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22160431-1ac11199b022497eb42699ad857befbc.png" alt="" /></p>
<p>弹出窗体界面效果如下。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22160441-f6320ef46ca64400910532018bba5392.png" alt="" /></p>
<p>它的界面代码如下所示：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="easyui-datebox"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="text"</span><span style="color: #ff0000;"> ID</span><span style="color: #0000ff;">="txtLastUpdated"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="txtLastUpdated"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="width:100px"</span>  <span style="color: #0000ff;">/&gt;</span></pre>
</div>
<p>赋值给界面控件代码如下：</p>
<div class="cnblogs_code">
<pre>$("#LastUpdated").datebox('setValue', info.LastUpdated);</pre>
</div>
<p>获取界面控件的值代码如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> lastupate = $("#txtLastUpdated").datebox('getValue');</pre>
</div>
<p>&nbsp;</p>
<h3>6、数值输入控件</h3>
<p>easyui使用样式easyui-numberbox标识为数值类型，其表现为文本框，但只能输入数值。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22161155-4859195ed83d4096adcc74f1db52653c.png" alt="" /></p>
<p>界面代码如下所示：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="easyui-numberbox"</span><span style="color: #ff0000;"> data-options</span><span style="color: #0000ff;">="min:10,max:90,precision:2,required:true"</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>或者使用&lsquo;easyui-numberspinner&rsquo;样式来标识，可以上下调节数值。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22161246-d241e97c9815425f9474ffa496a5685b.png" alt="" /></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="easyui-numberspinner"</span><span style="color: #ff0000;"> data-options</span><span style="color: #0000ff;">="min:10,max:100,required:true"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="width:80px;"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">input</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>赋值给界面控件代码如下：</p>
<div class="cnblogs_code">
<pre>$('#nn').numberbox('setValue', 206.12);</pre>
</div>
<p>或者</p>
<div class="cnblogs_code">
<pre>$('#ss').numberspinner('setValue', 8234725); </pre>
</div>
<p>获取界面控件的值代码如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> v = $('#nn').numberbox('getValue');</pre>
</div>
<p>&nbsp;或者</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> v = $('#ss').numberspinner('getValue');</pre>
</div>
<p>&nbsp;</p>
<h3>7、单项选择Radio控件</h3>
<p>单项选择Radio控件，是在多项内容里面选择一个选项进行保存或者显示。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22161547-eabd4c0fe9cf4cd29319a787483e65d1.png" alt="" /></p>
<p>界面代码如下所示：</p>
<div class="cnblogs_code">
<pre>                    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">tr</span><span style="color: #0000ff;">&gt;</span>
                        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">th</span><span style="color: #0000ff;">&gt;</span>
                            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">label</span><span style="color: #0000ff;">&gt;</span>数据分开方式：<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">label</span><span style="color: #0000ff;">&gt;</span>
                        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">th</span><span style="color: #0000ff;">&gt;</span>
                        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">td</span><span style="color: #0000ff;">&gt;</span>
                            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="SplitType"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="radio"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="easyui-validatebox"</span><span style="color: #ff0000;"> checked</span><span style="color: #0000ff;">="checked"</span><span style="color: #ff0000;"> required</span><span style="color: #0000ff;">="true"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="Split"</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">分隔符方式，多个数据中英文逗号，分号，斜杠或顿号[, ， ; ； / 、]分开，或一行一个　
                            </span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>
                            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="SplitType"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="radio"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="easyui-validatebox"</span><span style="color: #ff0000;"> required</span><span style="color: #0000ff;">="true"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="Line"</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">一行一个记录模式，忽略所有分隔符号
                        </span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">td</span><span style="color: #0000ff;">&gt;</span>
                    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">tr</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>赋值给界面控件代码如下：</p>
<div class="cnblogs_code">
<pre>$('input:radio[name="SplitType"][value="Split"]').prop('checked', true);</pre>
</div>
<p>获取界面控件的值代码如下：</p>
<div class="cnblogs_code">
<pre>$("input[name='SplitType']:checked").val()</pre>
</div>
<p>&nbsp;</p>
<p>或者使用Comobo控件作为单项选择的控件也是可以的，界面效果如下所示。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/18150941-fcdea5f7b40d436a93b0d1485437efcf.png" alt="" /></p>
<p>其界面代码如下所示：</p>
<div class="cnblogs_code">
<pre>    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">select </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="cc"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="width:150px"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">select</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="sp"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">style</span><span style="color: #0000ff;">="color:#99BBE8;background:#fafafa;padding:5px;"</span><span style="color: #0000ff;">&gt;</span>Select a language<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="radio"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="lang"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;</span>Java<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">br</span><span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="radio"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="lang"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="02"</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;</span>C#<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">br</span><span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="radio"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="lang"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="03"</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;</span>Ruby<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">br</span><span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="radio"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="lang"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="04"</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;</span>Basic<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">br</span><span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="radio"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="lang"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="05"</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;</span>Fortran<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="text/javascript"</span><span style="color: #0000ff;">&gt;</span><span style="background-color: #f5f5f5; color: #000000;">
        $(</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;">(){
            $(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">#cc</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">).combo({
                required:</span><span style="background-color: #f5f5f5; color: #0000ff;">true</span><span style="background-color: #f5f5f5; color: #000000;">,
                editable:</span><span style="background-color: #f5f5f5; color: #0000ff;">false</span><span style="background-color: #f5f5f5; color: #000000;">
            });
            $(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">#sp</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">).appendTo($(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">#cc</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">).combo(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">panel</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">));
            $(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">#sp input</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">).click(</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;">(){
                </span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> v </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> $(</span><span style="background-color: #f5f5f5; color: #0000ff;">this</span><span style="background-color: #f5f5f5; color: #000000;">).val();
                </span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> s </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> $(</span><span style="background-color: #f5f5f5; color: #0000ff;">this</span><span style="background-color: #f5f5f5; color: #000000;">).next(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">span</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">).text();
                $(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">#cc</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">).combo(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">setValue</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">, v).combo(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">setText</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">, s).combo(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">hidePanel</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">);
            });
        });
    </span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<h3>8、复选框</h3>
<p>复选框是在一项或多项内容中，选择零项或者多项的一个输入界面控件。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22161826-3d0a0f4e910b40b286d1455ef2650a64.png" alt="" /></p>
<p>界面代码如下所示：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="chkIsExpire"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="checkbox"</span> <span style="color: #0000ff;">&gt;</span>帐号过期</pre>
</div>
<p>由于复选框的一些特殊性质，在表单提交的时候，如果没有勾选的选型，使用serializeArray()方法构造的数据，复选框的值则不会被提交。</p>
<p>基于这个原因，我们可以使用Select控件进行替代，实现复选项的功能，而不影响</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> postData = $("#ffEdit").serializeArray();</pre>
</div>
<p>以上代码的使用。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22162010-b6f901dcd14a49a4ba379dd01d698ec6.png" alt="" /></p>
<p>使用Select控件的代码如下所示。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">select  </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="Visible1"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="Visible"</span><span style="color: #0000ff;">&gt;</span>
          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">option </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="true"</span><span style="color: #ff0000;"> selected</span><span style="color: #0000ff;">&gt;</span>正常<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">option</span><span style="color: #0000ff;">&gt;</span>
          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">option </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="false"</span><span style="color: #0000ff;">&gt;</span>不可见<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">option</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">select</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>赋值给界面控件代码如下：</p>
<div class="cnblogs_code">
<pre>$("#Visible1").prop('checked', info.Visible);</pre>
</div>
<p>获取界面控件的值代码如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> visible = $("#txtVisible").val();</pre>
</div>
<p>&nbsp;</p>
<h3>9、表格控件DataGrid</h3>
<p>easyui的列表控件，可以通过指定table的class属性为<span class="webkit-html-attribute-value">easyui-datagrid即可实现表格的定义，界面代码如下所示：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">table </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="easyui-datagrid"</span><span style="color: #ff0000;"> title</span><span style="color: #0000ff;">="Basic DataGrid"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="width:700px;height:250px"</span><span style="color: #ff0000;">
            data-options</span><span style="color: #0000ff;">="singleSelect:true,collapsible:true,url:'../datagrid/datagrid_data1.json'"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">thead</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">tr</span><span style="color: #0000ff;">&gt;</span>
                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">th </span><span style="color: #ff0000;">data-options</span><span style="color: #0000ff;">="field:'itemid',width:80"</span><span style="color: #0000ff;">&gt;</span>Item ID<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">th</span><span style="color: #0000ff;">&gt;</span>
                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">th </span><span style="color: #ff0000;">data-options</span><span style="color: #0000ff;">="field:'productid',width:100"</span><span style="color: #0000ff;">&gt;</span>Product<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">th</span><span style="color: #0000ff;">&gt;</span>
                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">th </span><span style="color: #ff0000;">data-options</span><span style="color: #0000ff;">="field:'listprice',width:80,align:'right'"</span><span style="color: #0000ff;">&gt;</span>List Price<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">th</span><span style="color: #0000ff;">&gt;</span>
                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">th </span><span style="color: #ff0000;">data-options</span><span style="color: #0000ff;">="field:'unitcost',width:80,align:'right'"</span><span style="color: #0000ff;">&gt;</span>Unit Cost<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">th</span><span style="color: #0000ff;">&gt;</span>
                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">th </span><span style="color: #ff0000;">data-options</span><span style="color: #0000ff;">="field:'attr1',width:250"</span><span style="color: #0000ff;">&gt;</span>Attribute<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">th</span><span style="color: #0000ff;">&gt;</span>
                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">th </span><span style="color: #ff0000;">data-options</span><span style="color: #0000ff;">="field:'status',width:60,align:'center'"</span><span style="color: #0000ff;">&gt;</span>Status<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">th</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">tr</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">thead</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">table</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><span class="webkit-html-attribute-value">不过为了避免使用脚本定义datagrid导致多次初始化的问题，我们一般只需要指定一个table代码即可，界面如下所示</span><span><br /></span></p>
<div class="cnblogs_code">
<pre>            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">table </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="grid"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="width: 1024px"</span><span style="color: #ff0000;"> title</span><span style="color: #0000ff;">="用户操作"</span><span style="color: #ff0000;"> iconcls</span><span style="color: #0000ff;">="icon-view"</span><span style="color: #0000ff;">&gt;</span>            
            <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">table</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>而表格控件的数据加载，我们使用javascript进行初始化，初始化后的表格界面显示效果如下所示。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22162745-bb551bedf44a40ceb9f5810a8cf5b4ce.png" alt="" /></p>
<p>&nbsp;</p>
<p>Javascript代码如下所示，其中的width: function () { return document.body.clientWidth * 0.9 }是用来实现宽度自适应的一个操作。</p>
<div class="cnblogs_code">
<pre>        <span style="color: #008000;">//</span><span style="color: #008000;">实现对DataGird控件的绑定操作</span>
        <span style="color: #0000ff;">function</span><span style="color: #000000;"> InitGrid(queryData) {
            $(</span>'#grid').datagrid({   <span style="color: #008000;">//</span><span style="color: #008000;">定位到Table标签，Table标签的ID是grid</span>
                url: '/Menu/FindWithPager',   <span style="color: #008000;">//</span><span style="color: #008000;">指向后台的Action来获取当前菜单的信息的Json格式的数据</span>
                title: '功能菜单'<span style="color: #000000;">,
                iconCls: </span>'icon-view'<span style="color: #000000;">,
                height: </span>650<span style="color: #000000;">,
                width: </span><span style="color: #0000ff;">function</span> () { <span style="color: #0000ff;">return</span> document.body.clientWidth * 0.9<span style="color: #000000;"> },
                nowrap: </span><span style="color: #0000ff;">true</span><span style="color: #000000;">,
                autoRowHeight: </span><span style="color: #0000ff;">false</span><span style="color: #000000;">,
                striped: </span><span style="color: #0000ff;">true</span><span style="color: #000000;">,
                collapsible: </span><span style="color: #0000ff;">true</span><span style="color: #000000;">,
                pagination: </span><span style="color: #0000ff;">true</span><span style="color: #000000;">,
                pageSize: </span>100<span style="color: #000000;">,
                pageList: [</span>50,100,200<span style="color: #000000;">],
                rownumbers: </span><span style="color: #0000ff;">true</span><span style="color: #000000;">,
                </span><span style="color: #008000;">//</span><span style="color: #008000;">sortName: 'ID',    //根据某个字段给easyUI排序</span>
                sortOrder: 'asc'<span style="color: #000000;">,
                remoteSort: </span><span style="color: #0000ff;">false</span><span style="color: #000000;">,
                idField: </span>'ID'<span style="color: #000000;">,
                queryParams: queryData,  </span><span style="color: #008000;">//</span><span style="color: #008000;">异步查询的参数</span>
<span style="color: #000000;">                columns: [[
                    { field: </span>'ck', checkbox: <span style="color: #0000ff;">true</span> },   <span style="color: #008000;">//</span><span style="color: #008000;">选择</span>
                     { title: '显示名称', field: 'Name', width: 200<span style="color: #000000;">},
                     { title: </span>'图标', field: 'Icon', width: 150<span style="color: #000000;"> },
                     { title: </span>'排序', field: 'Seq', width: 80<span style="color: #000000;"> },
                     { title: </span>'功能ID', field: 'FunctionId', width: 80<span style="color: #000000;"> },
                     { title: </span>'菜单可见', field: 'Visible', width: 80<span style="color: #000000;"> },
                     { title: </span>'Winform窗体类型', field: 'WinformType', width: 400<span style="color: #000000;"> },
                     { title: </span>'Web界面Url地址', field: 'Url', width: 200<span style="color: #000000;"> },
                     { title: </span>'Web界面的菜单图标', field: 'WebIcon', width: 120<span style="color: #000000;"> },
                     { title: </span>'系统编号', field: 'SystemType_ID', width: 80<span style="color: #000000;"> }
                ]],
                toolbar: [{
                    id: </span>'btnAdd'<span style="color: #000000;">,
                    text: </span>'添加'<span style="color: #000000;">,
                    iconCls: </span>'icon-add'<span style="color: #000000;">,
                    handler: </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> () {
                        ShowAddDialog();</span><span style="color: #008000;">//</span><span style="color: #008000;">实现添加记录的页面</span>
<span style="color: #000000;">                    }
                }, </span>'-'<span style="color: #000000;">, {
                    id: </span>'btnEdit'<span style="color: #000000;">,
                    text: </span>'修改'<span style="color: #000000;">,
                    iconCls: </span>'icon-edit'<span style="color: #000000;">,
                    handler: </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> () {
                        ShowEditOrViewDialog();</span><span style="color: #008000;">//</span><span style="color: #008000;">实现修改记录的方法</span>
<span style="color: #000000;">                    }
                }, </span>'-'<span style="color: #000000;">, {
                    id: </span>'btnDelete'<span style="color: #000000;">,
                    text: </span>'删除'<span style="color: #000000;">,
                    iconCls: </span>'icon-remove'<span style="color: #000000;">,
                    handler: </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> () {
                        Delete();</span><span style="color: #008000;">//</span><span style="color: #008000;">实现直接删除数据的方法</span>
<span style="color: #000000;">                    }
                }, </span>'-'<span style="color: #000000;">, {
                    id: </span>'btnView'<span style="color: #000000;">,
                    text: </span>'查看'<span style="color: #000000;">,
                    iconCls: </span>'icon-table'<span style="color: #000000;">,
                    handler: </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> () {
                        ShowEditOrViewDialog(</span>"view");<span style="color: #008000;">//</span><span style="color: #008000;">实现查看记录详细信息的方法</span>
<span style="color: #000000;">                    }
                }, </span>'-'<span style="color: #000000;">, {
                    id: </span>'btnReload'<span style="color: #000000;">,
                    text: </span>'刷新'<span style="color: #000000;">,
                    iconCls: </span>'icon-reload'<span style="color: #000000;">,
                    handler: </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> () {
                        </span><span style="color: #008000;">//</span><span style="color: #008000;">实现刷新栏目中的数据</span>
                        $("#grid").datagrid("reload"<span style="color: #000000;">);
                    }
                }],
                onDblClickRow: </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> (rowIndex, rowData) {
                    $(</span>'#grid').datagrid('uncheckAll'<span style="color: #000000;">);
                    $(</span>'#grid').datagrid('checkRow'<span style="color: #000000;">, rowIndex);
                    ShowEditOrViewDialog();
                }
            })
        };</span></pre>
</div>
<p>对于查询按钮触发的数据后台查询及数据绑定操作，javascript代码如下所示：</p>
<div class="cnblogs_code">
<pre>        <span style="color: #008000;">//</span><span style="color: #008000;">绑定查询按钮的的点击事件</span>
        <span style="color: #0000ff;">function</span><span style="color: #000000;"> BindSearchEvent() {
            </span><span style="color: #008000;">//</span><span style="color: #008000;">按条件进行查询数据，首先我们得到数据的值</span>
            $("#btnSearch").click(<span style="color: #0000ff;">function</span><span style="color: #000000;"> () {
                </span><span style="color: #008000;">//</span><span style="color: #008000;">得到用户输入的参数，</span><span style="color: #008000;">取值有几种方式：$("#id").combobox('getValue'), $("#id").datebox('getValue'), $("#id").val()</span>
                <span style="color: #008000;">//</span><span style="color: #008000;">字段增加WHC_前缀字符，避免传递如URL这样的Request关键字冲突</span>
                <span style="color: #0000ff;">var</span> queryData =<span style="color: #000000;"> {
                    WHC_ID: $(</span>"#txtID"<span style="color: #000000;">).val(),</span>
                    WHC_Name: $("#txtName"<span style="color: #000000;">).val(),
                    WHC_Icon: $(</span>"#txtIcon"<span style="color: #000000;">).val(),
                    WHC_Seq: $(</span>"#txtSeq"<span style="color: #000000;">).val(),
                    WHC_FunctionId: $(</span>"#txtFunctionId"<span style="color: #000000;">).val(),
                    WHC_Visible: $(</span>"#txtVisible"<span style="color: #000000;">).val(),
                    WHC_WinformType: $(</span>"#txtWinformType"<span style="color: #000000;">).val(),
                    WHC_Url: $(</span>"#txtUrl"<span style="color: #000000;">).val(),
                    WHC_WebIcon: $(</span>"#txtWebIcon"<span style="color: #000000;">).val(),
                    WHC_SystemType_ID: $(</span>"#txtSystemType_ID"<span style="color: #000000;">).val()
                }
                </span><span style="color: #008000;">//</span><span style="color: #008000;">将值传递给</span>
<span style="color: #000000;">                InitGrid(queryData);
                </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
            });
        }</span></pre>
</div>
<p>通过构造一些查询参数并传递相应的值，后台根据这些参数，从对应控制器的分页方法&nbsp;<strong>FindWithPager&nbsp;</strong>获取相应的分页数据，并绑定到grid控件中。</p>
<p><strong>另外，如果需要在grid里面增加一些图片或者链接什么的，应该如何操作呢？</strong></p>
<p>如下界面所示的效果：</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/23102342-e51fe469baa44e00bafa66d86a863614.png" alt="" />&nbsp;</p>
<p>首先需要在初始化代码里面增加列的formatter回调函数，如下所示。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">                columns: [[
                    { field: </span>'ck', checkbox: <span style="color: #0000ff;">true</span> },   <span style="color: #008000;">//</span><span style="color: #008000;">选择</span>
                     { title: '显示名称', field: 'Name', width: 200<span style="color: #000000;">},
                     { title: </span>'图标', field: 'Icon', width: 150<span style="color: #000000;"> },
                     { title: </span>'排序', field: 'Seq', width: 80<span style="color: #000000;"> },
                     { title: </span>'功能ID', field: 'FunctionId', width: 80<span style="color: #000000;"> },
                     {
                         title: </span>'菜单可见', field: 'Visible', width: 80, <strong>formatter</strong>: <span style="color: #0000ff;">function</span><span style="color: #000000;"> (val, rowdata, index) {
                             </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (val) {
                                 </span><span style="color: #0000ff;">return</span> '&lt;a class="grid_visible" href="javascript:void(0)" &gt;' + val + '&lt;/a&gt;'<span style="color: #000000;">;
                             } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
                                 </span><span style="color: #0000ff;">return</span> '&lt;a class="grid_unvisible" href="javascript:void(0)" &gt;' + val + '&lt;/a&gt;'<span style="color: #000000;">;
                             }
                         }
                     },
                     { title: </span>'Winform窗体类型', field: 'WinformType', width: 400<span style="color: #000000;"> },
                     { title: </span>'Web界面Url地址', field: 'Url', width: 200<span style="color: #000000;"> },
                     { title: </span>'Web界面的菜单图标', field: 'WebIcon', width: 120<span style="color: #000000;"> },
                     { title: </span>'系统编号', field: 'SystemType_ID', width: 80<span style="color: #000000;"> }
                ]],</span></pre>
</div>
<p>在formatter回调函数里面添加逻辑代码，判断是否可见，其实就是增加两个图片按钮，但是图片按钮的样式设置，必须在加载数据完毕后才能操作，因此需要在函数里面处理。</p>
<div class="cnblogs_code">
<pre>                onLoadSuccess: <span style="color: #0000ff;">function</span><span style="color: #000000;"> () {
                    $(</span>".grid_visible").linkbutton({ text: '可见', plain: <span style="color: #0000ff;">true</span>, iconCls: 'icon-ok'<span style="color: #000000;"> });
                    $(</span>".grid_unvisible").linkbutton({ text: '不可见', plain: <span style="color: #0000ff;">true</span>, iconCls: 'icon-stop'<span style="color: #000000;"> });
                },</span></pre>
</div>
<p>如果显示的图片不完整，设置行的自动调整高度属性为true即可。</p>
<p><strong>autoRowHeight: <span style="color: #ff0000;">true</span></strong></p>
<p>&nbsp;</p>
<h3>10、树形控件</h3>
<p>虽然easyui也有Tree控件，不过我较喜欢使用zTree这个树形控件，这个是一个免费的Jquery树控件。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22163041-1f9ff9ff2d7e40818d0e3cdbc1e67d97.png" alt="" /></p>
<p>引用代码如下所示：</p>
<div class="cnblogs_code">
<pre>    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">link </span><span style="color: #ff0000;">href</span><span style="color: #0000ff;">="~/Content/JQueryTools/JQueryTree/css/zTreeStyle/zTreeStyle.css"</span><span style="color: #ff0000;"> rel</span><span style="color: #0000ff;">="stylesheet"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="text/css"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="~/Content/JQueryTools/JQueryTree/js/jquery.ztree.core-3.5.min.js"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="text/javascript"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>初始化在Tree树控件的界面代码如下所示：</p>
<div class="cnblogs_code">
<pre>    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="text/javascript"</span><span style="color: #0000ff;">&gt;</span>
     <span style="background-color: #f5f5f5; color: #000000;">&lt;!--</span>
        <span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> setting </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> {
            data: {
                simpleData: {
                    enable: </span><span style="background-color: #f5f5f5; color: #0000ff;">true</span><span style="background-color: #f5f5f5; color: #000000;">
                }
            },
            callback: {
                onClick: onClick,
                onDblClick: onDblClick
            }
        }

        </span><span style="background-color: #f5f5f5; color: #008000;">//</span><span style="background-color: #f5f5f5; color: #008000;">重新加载树形结构（异步）</span>
        <span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> reloadTree() {
            $(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">#loading</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">).show();

            $.getJSON(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">/DictType/GetTreeJson?r=</span><span style="background-color: #f5f5f5; color: #000000;">"</span> <span style="background-color: #f5f5f5; color: #000000;">+</span><span style="background-color: #f5f5f5; color: #000000;"> Math.random(), </span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> (json) {
                $.fn.zTree.init($(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">#treeDemo</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">), setting, json);
                $.fn.zTree.getZTreeObj(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">treeDemo</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">).expandAll(</span><span style="background-color: #f5f5f5; color: #0000ff;">true</span><span style="background-color: #f5f5f5; color: #000000;">);

                </span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> treeObj </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> $.fn.zTree.getZTreeObj(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">treeDemo</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">);
                </span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> treeNodes </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> treeObj.getNodes();
                </span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (treeNodes </span><span style="background-color: #f5f5f5; color: #000000;">!=</span> <span style="background-color: #f5f5f5; color: #0000ff;">null</span><span style="background-color: #f5f5f5; color: #000000;">) {
                    loadTypeData(treeNodes[</span><span style="background-color: #f5f5f5; color: #000000;">0</span><span style="background-color: #f5f5f5; color: #000000;">].id);
                }
            });
            $(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">#loading</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">).fadeOut(</span><span style="background-color: #f5f5f5; color: #000000;">500</span><span style="background-color: #f5f5f5; color: #000000;">);
        }

        </span><span style="background-color: #f5f5f5; color: #008000;">//</span><span style="background-color: #f5f5f5; color: #008000;">树单击节点操作</span>
        <span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> onClick(event, treeId, treeNode, clickFlag) {
            </span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> id </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> treeNode.id;
            loadTypeData(id);
        }
        </span><span style="background-color: #f5f5f5; color: #008000;">//</span><span style="background-color: #f5f5f5; color: #008000;">树双击节点操作</span>
        <span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> onDblClick(event, treeId, treeNode) {
            </span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> id </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> treeNode.id;
            loadTypeData(id);
            ShowDictType(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">edit</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">);
        }</span></pre>
</div>
<p>&nbsp;</p>
<h3>11、布局控件</h3>
<p>EasyUI通过DIV层来控制布局的显示，DIV里面增加一个Region的属性用来区分属于哪个区域，如下图是我Web开发框架的界面布局效果图。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22164311-9f0f0c57b81441cd9bc34e4763031d91.png" alt="" /></p>
<p><span style="line-height: 1.5;">界面代码如下所示：</span></p>
<p>&nbsp;<img src="http://images.cnitblog.com/blog/8867/201309/22164357-f370041737594c1e9dce471a2b53eeb8.png" alt="" /></p>
<p>我们详细查看主工作区的代码，如下所示。</p>
<div class="cnblogs_code">
<pre>    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">主工作区</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="mainPanle"</span><strong><span style="color: #ff0000;"> region</span><span style="color: #0000ff;">="center"</span></strong><span style="color: #ff0000;"> title</span><span style="color: #0000ff;">=""</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="overflow:hidden;"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="tabs"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="easyui-tabs"</span><span style="color: #ff0000;">  fit</span><span style="color: #0000ff;">="true"</span><span style="color: #ff0000;"> border</span><span style="color: #0000ff;">="false"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><span style="line-height: 1.5;">&nbsp;其中字典管理里面还有子布局的展示，我们查看字典管理里面界面代码，如下所示。</span></p>
<div class="cnblogs_code">
<pre>    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="easyui-layout"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="width:700px;height:700px;"</span><span style="color: #ff0000;"> fit</span><span style="color: #0000ff;">="true"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">data-options</span><span style="color: #0000ff;">="region:'west',split:true,title:'字典类别',iconCls:'icon-book'"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="width: 300px; padding: 1px;"</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">style</span><span style="color: #0000ff;">="padding: 1px; border: 1px solid #ddd;"</span><span style="color: #0000ff;">&gt;</span>                
                <span style="color: #0000ff;">.......................</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">ul </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="treeDemo"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="ztree"</span><span style="color: #0000ff;">&gt;</span>
                <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">ul</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="tb"</span><span style="color: #ff0000;"> data-options</span><span style="color: #0000ff;">="region:'center',title:'字典数据',iconCls:'icon-book'"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="padding:5px;height:auto"</span><span style="color: #0000ff;">&gt;</span>                
            <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">-----------------------------详细信息展示表格---------------------------------</span><span style="color: #008000;">--&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">table </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="grid"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="width: 940px"</span><span style="color: #ff0000;"> title</span><span style="color: #0000ff;">="用户操作"</span><span style="color: #ff0000;"> iconcls</span><span style="color: #0000ff;">="icon-view"</span><span style="color: #0000ff;">&gt;</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">table</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<h3>12、弹出式对话框</h3>
<p>EasyUI弹出式对话框用的很多，对话框的界面代码放在DIV层里面，一般在界面整个界面加载后中已经初始化了，只是我们根据条件相似适当的层即可，这样就形成了弹出式对话框，弹出式对话框有一个遮罩的效果。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22165231-2cca658e91e143159d94e14d3bc850d9.png" alt="" /></p>
<p>界面代码如下所示：</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22165501-982742dbe6dc4eba95420938f5d6267b.png" alt="" /></p>
<p>&nbsp;</p>
<h3>13、提示信息</h3>
<p>在常规的Web界面提示里面，我们一般用纯粹的javascript的alert函数来进行信息的提示，如果在基于EasyUI的界面布局和演示里面，使用这个提示显然会和界面演示不够匹配，因此我们使用messager类来进行相应的提示信息处理，简单的脚本提示代码如下。</p>
<div class="cnblogs_code">
<pre>$.messager.alert("提示", "修改成功");</pre>
</div>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22170108-321c27d9d62d4870bee10a8741272490.png" alt="" /></p>
<p>提示信息也可以更加丰富，添加图标等信息，界面代码如下所示。</p>
<div class="cnblogs_code">
<pre>    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span>
        <span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> alert1(){
            $.messager.alert(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">My Title</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">Here is a message!</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">);
        }
        </span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> alert2(){
            $.messager.alert(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">My Title</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">Here is a error message!</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">error</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">);
        }
        </span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> alert3(){
            $.messager.alert(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">My Title</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">Here is a info message!</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">info</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">);
        }
        </span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> alert4(){
            $.messager.alert(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">My Title</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">Here is a question message!</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">question</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">);
        }
        </span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> alert5(){
            $.messager.alert(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">My Title</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">Here is a warning message!</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">warning</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">);
        }
    </span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>对于一般的删除操作，一般有一个提示确认的消息框，这个messager类也进行了封装处理，效果也不错。</p>
<p><img src="http://images.cnitblog.com/blog/8867/201309/22170710-24e3b1ef797c4e2d9ffd9ebae26182b2.png" alt="" /></p>
<p>界面代码如下所示。</p>
<div class="cnblogs_code">
<pre>                $.messager.confirm("删除确认", "您确认删除选定的记录吗？", <span style="color: #0000ff;">function</span><span style="color: #000000;"> (deleteAction) {
                    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (deleteAction) {
                        $.get(</span>"/DictData/DeletebyIds", postData, <span style="color: #0000ff;">function</span><span style="color: #000000;"> (data) {
                            </span><span style="color: #0000ff;">if</span> (data == "true"<span style="color: #000000;">) {
                                $.messager.alert(</span>"提示", "删除选定的记录成功"<span style="color: #000000;">);
                                $(</span>"#grid").datagrid("reload"<span style="color: #000000;">);

                                </span><span style="color: #008000;">//</span><span style="color: #008000;">当删除完成之后，第二次删除的时候还记得上次的信息，这样是不可以的，所以我们需要清除第一次的信息                                </span>
                                rows.length = "";<span style="color: #008000;">//</span><span style="color: #008000;">第一种方法                                </span>
                                $("#grid").datagrid("clearSelections");<span style="color: #008000;">//</span><span style="color: #008000;">第二种方法</span>
<span style="color: #000000;">                            }
                            </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
                                $.messager.alert(</span>"提示"<span style="color: #000000;">, data);
                            }
                        });
                    }
                });</span></pre>
</div>
<p>以上就是我Web开发框架里面常用到的一些界面控件展示以及相关的代码介绍，有一些不太常用的控件可能还没有在本文中介绍，欢迎大家进行补充和讨论，以后有时间继续完善这个文章，作为基于MVC+EasyUI的框架界面的一个很好的参考。希望大家喜欢，多多提意见。</p>
<h3>基于MVC4+EasyUI的Web开发框架的系列文章：</h3>
<p><a id="PostsList1_rpPosts_TitleUrl_0" href="http://www.cnblogs.com/wuhuacong/p/3281103.html">基于MVC4+EasyUI的Web开发框架形成之旅--总体介绍</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_0" href="http://www.cnblogs.com/wuhuacong/p/3281103.html"></a><a id="cb_post_title_url" href="http://www.cnblogs.com/wuhuacong/p/3284628.html">基于MVC4+EasyUI的Web开发框架形成之旅--MVC控制器的设计</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_18" href="http://www.cnblogs.com/wuhuacong/p/3317223.html">基于MVC4+EasyUI的Web开发框架形成之旅--界面控件的使用</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_17" href="http://www.cnblogs.com/wuhuacong/p/3343967.html">基于MVC4+EasyUI的Web开发框架形成之旅--附件上传组件uploadify的使用</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_16" href="http://www.cnblogs.com/wuhuacong/p/3344096.html">基于MVC4+EasyUI的Web开发框架形成之旅--框架总体界面介绍</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_15" href="http://www.cnblogs.com/wuhuacong/p/3352016.html">基于MVC4+EasyUI的Web开发框架形成之旅--基类控制器CRUD的操作</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_14" href="http://www.cnblogs.com/wuhuacong/p/3361351.html">基于MVC4+EasyUI的Web开发框架形成之旅--权限控制</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_13" href="http://www.cnblogs.com/wuhuacong/p/3667703.html">基于MVC4+EasyUI的Web开发框架经验总结（1）-利用jQuery Tags Input 插件显示选择记录</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_12" href="http://www.cnblogs.com/wuhuacong/p/3669575.html">基于MVC4+EasyUI的Web开发框架经验总结（2）- 使用EasyUI的树控件构建Web界面</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_11" href="http://www.cnblogs.com/wuhuacong/p/3669708.html">基于MVC4+EasyUI的Web开发框架经验总结（3）- 使用Json实体类构建菜单数据</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_10" href="http://www.cnblogs.com/wuhuacong/p/3736564.html">基于MVC4+EasyUI的Web开发框架经验总结（4）--使用图表控件Highcharts</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_9" href="http://www.cnblogs.com/wuhuacong/p/3780356.html">基于MVC4+EasyUI的Web开发框架经验总结（5）--使用HTML编辑控件CKEditor和CKFinder</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_8" href="http://www.cnblogs.com/wuhuacong/p/3840321.html">基于MVC4+EasyUI的Web开发框架经验总结（6）--在页面中应用下拉列表的处理</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_7" href="http://www.cnblogs.com/wuhuacong/p/3841338.html">基于MVC4+EasyUI的Web开发框架经验总结（7）--实现省份、城市、行政区三者联动</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_6" href="http://www.cnblogs.com/wuhuacong/p/3871991.html">基于MVC4+EasyUI的Web开发框架经验总结（8）--实现Office文档的预览</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_5" href="http://www.cnblogs.com/wuhuacong/p/3872890.html">基于MVC4+EasyUI的Web开发框架经验总结（9）--在Datagrid里面实现外键字段的转义操作</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_4" href="http://www.cnblogs.com/wuhuacong/p/3873498.html">基于MVC4+EasyUI的Web开发框架经验总结（10）--在Web界面上实现数据的导入和导出</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_3" href="http://www.cnblogs.com/wuhuacong/p/4073203.html">基于MVC4+EasyUI的Web开发框架经验总结（11）--使用Bundles处理简化页面代码</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_2" href="http://www.cnblogs.com/wuhuacong/p/4085682.html">基于MVC4+EasyUI的Web开发框架经验总结（12）--利用Jquery处理数据交互的几种方式</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_1" href="http://www.cnblogs.com/wuhuacong/p/4085725.html">基于MVC4+EasyUI的Web开发框架经验总结（13）--DataGrid控件实现自动适应宽带高度</a></p>
<p><a id="PostsList1_rpPosts_TitleUrl_0" href="http://www.cnblogs.com/wuhuacong/p/4093778.html">基于MVC4+EasyUI的Web开发框架经验总结（14）--自动生成图标样式文件和图标的选择操作</a></p></div><div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
<div id="BlogPostCategory"></div>
<div id="EntryTag"></div>
<div id="blog_post_info">
</div>
<div class="clear"></div>
<div id="post_next_prev"></div>
</div>


		</div>
		<p class="postfoot">
			posted on <span id="post-date">2013-09-22 17:13</span> <a href='http://www.cnblogs.com/wuhuacong/'>伍华聪</a> 阅读(<span id="post_view_count">...</span>) 评论(<span id="post_comment_count">...</span>)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=3317223" rel="nofollow">编辑</a> <a href="#" onclick="AddToWz(3317223);return false;">收藏</a>
		</p>
	</div>
	<script type="text/javascript">var allowComments=true,isLogined=false,cb_blogId=12391,cb_entryId=3317223,cb_blogApp=currentBlogApp,cb_blogUserGuid='689f310b-63cf-dd11-9e4d-001cf0cd104b',cb_entryCreatedDate='2013/9/22 17:13:00';loadViewCount(cb_entryId);</script>
	
	</div><a name="!comments"></a><div id="blog-comments-placeholder"></div><script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script>
<div id="comment_form" class="commentform">
<a name="commentform"></a>
<div id="divCommentShow"></div>
<div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
<div id="comment_form_container"></div>
<div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
<div id="site_nav_under"><a href="http://www.cnblogs.com/" target="_blank" title="开发者的网上家园">博客园首页</a><a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区">博问</a><a href="http://news.cnblogs.com/" target="_blank" title="IT新闻">新闻</a><a href="http://home.cnblogs.com/ing/" target="_blank">闪存</a><a href="http://job.cnblogs.com/" target="_blank">程序员招聘</a><a href="http://kb.cnblogs.com/" target="_blank">知识库</a></div>
<div id="opt_under_post"></div>
<script type="text/javascript">
    fixPostBodyFormat();
</script>
<div id="google_ad_c1" class="c_ad_block"></div>
<div id="under_post_news"></div>
<div id="google_ad_c2" class="c_ad_block"></div>
<div id="under_post_kb"></div>
<div id="google_ad_c3" class="c_ad_block">
    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- C3_BlogPost -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:250px"
     data-ad-client="ca-pub-4210569241504288"
     data-ad-slot="3239908880"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>
<div id="HistoryToday" class="c_ad_block"></div>
<script type="text/javascript">
$(function () {
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    setTimeout(function () { incrementViewCount(cb_entryId); }, 200);
});
</script>
</div>

</div>
</div>
<div id="leftmenu">


<h3>导航</h3>
<ul>
<li>
<a id="MyLinks1_HomeLink" href="http://www.cnblogs.com/">博客园</a></li>
<li>
<a id="MyLinks1_MyHomeLink" class="two_words" href="http://www.cnblogs.com/wuhuacong/">首页</a></li>
<li>
<a id="MyLinks1_NewPostLink" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a></li>
<li>
<a id="MyLinks1_ContactLink" accesskey="9" class="two_words" rel="nofollow" href="http://msg.cnblogs.com/send/%E4%BC%8D%E5%8D%8E%E8%81%AA">联系</a></li>
<li>
<a id="MyLinks1_Syndication" class="two_words" href="http://www.cnblogs.com/wuhuacong/rss">订阅</a>
<a id="MyLinks1_XMLLink" href="http://www.cnblogs.com/wuhuacong/rss"><img src="http://www.cnblogs.com/images/xml.gif" alt="订阅" /></a>
</li>
<li>
<a id="MyLinks1_Admin" class="two_words" rel="nofollow" href="http://i.cnblogs.com/">管理</a></li>
</ul>

<div id="blog-calendar" style="display:none"></div><script type="text/javascript">loadBlogDefaultCalendar();</script>
<meta name="vs_showGrid" content="False">

<h3>公告</h3>
<div id="blog-news"></div><script type="text/javascript">loadBlogNews();</script>

<div id="blog-sidecolumn"></div><script type="text/javascript">loadBlogSideColumn();</script>

</div>
</div>
<div class="clear"></div>
<div id="footer">

<p id="footer">
	Powered by: 
	<br />
	
	<a id="Footer1_Hyperlink3" NAME="Hyperlink1" href="http://www.cnblogs.com/" style="font-family:Verdana;font-size:12px;">博客园</a>
	<br />
	Copyright &copy; 伍华聪
</p>
</div>
</div>

</body>
</html>
